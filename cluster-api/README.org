#+TITLE: Cluster-API set up on Pair
#+PROPERTY: header-args:shell+ :prologue "( " :epilogue " ) 2>&1 ; :" :results silent

Commands that are run in the lifecycle of setting up a Pair instance

* Fetch external manifests
Packet-CCM
#+begin_src shell
curl -o ./manifests/packet-ccm.yaml -L https://github.com/packethost/packet-ccm/releases/download/v2.0.0/deployment.yaml
#+end_src

Local-Path-Storage
#+begin_src shell
curl -o ./manifests/local-path-storage.yaml -L https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.19/deploy/local-path-storage.yaml
#+end_src

Cert-Manager
#+begin_src shell
curl -o ./manifests/cert-manager.yaml -L https://github.com/jetstack/cert-manager/releases/download/v1.5.0/cert-manager.yaml
#+end_src

WeaveNet
#+begin_src shell
curl -o ./manifests/weavenet.yaml -L "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')&env.IPALLOC_RANGE=192.168.0.0/16"
#+end_src

Helm-Operator
#+begin_src shell
curl -o ./manifests/helm-operator-crds.yaml -L https://raw.githubusercontent.com/fluxcd/helm-operator/1.4.0/deploy/crds.yaml

helm repo add fluxcd https://charts.fluxcd.io
helm template helm-operator --create-namespace fluxcd/helm-operator \
    --version 1.4.0 \
    --namespace helm-operator \
    --set helm.versions=v3 > ./manifests/helm-operator.yaml
#+end_src

Metallb
#+begin_src shell
curl -o ./manifests/metallb-namespace.yaml -L https://raw.githubusercontent.com/metallb/metallb/v0.10.2/manifests/namespace.yaml
curl -o ./manifests/metallb.yaml -L https://raw.githubusercontent.com/metallb/metallb/v0.10.2/manifests/metallb.yaml
#+end_src

External-DNS
#+begin_src shell
curl -o ./manifests/external-dns-crd.yaml -L https://raw.githubusercontent.com/kubernetes-sigs/external-dns/v0.8.0/docs/contributing/crd-source/crd-manifest.yaml
#+end_src

* Extras
#+begin_src shell
mkdir -p manifests/extras
#+end_src

** Knative
#+begin_src shell
mkdir -p manifests/extras/knative
cd $_

# Knative Operator
VERSION=1.3.1
mkdir -p ./knative-serving
curl -o ./01-knative-operator.yaml -L "https://github.com/knative/operator/releases/download/knative-v${VERSION}/operator.yaml"
sed -i -e 's/namespace: default/namespace: knative-operator/g' ./01-knative-operator.yaml

# contour for Knative
curl \
    -o ./02-contour.yaml \
    -L https://github.com/knative/net-contour/releases/download/knative-v1.3.0/contour.yaml
#+end_src

#+begin_src yaml :tangle ./manifests/extras/knative/00-operator-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
 name: knative-operator
#+end_src

#+begin_src yaml :tangle ./manifests/extras/knative/03-serving.yaml
apiVersion: v1
kind: Namespace
metadata:
 name: knative-serving
---
apiVersion: operator.knative.dev/v1beta1
kind: KnativeServing
metadata:
  name: knative-serving
  namespace: knative-serving
spec:
  version: 1.3.0
  additionalManifests:
    - URL: https://github.com/knative/net-certmanager/releases/download/knative-v1.3.0/release.yaml
  ingress:
    istio:
      enabled: false
    kourier:
      enabled: false
    contour:
      enabled: true
  config:
    contour:
      default-tls-secret: ${SHARINGIO_PAIR_INSTANCE_SETUP_USERLOWERCASE}/letsencrypt-prod
    network:
      ingress-class: contour.ingress.networking.knative.dev
      clusteringress.class: contour.ingress.networking.knative.dev
      certificate-provider: cert-manager
      autocreate-cluster-domain-claims: "true"
      auto-tls: Enabled
      default-external-scheme: HTTPS
      http-protocol: Redirected
    defaults:
      container-name-template: "{{.Name}}"
    domain:
      ${SHARINGIO_PAIR_BASE_DNS_NAME}: ""
    certmanager:
      issuerRef: |
        kind: ClusterIssuer
        name: letsencrypt-prod

#+end_src

#+begin_src yaml :tangle ./manifests/extras/knative/04-tlscertificatedelegation.yaml
apiVersion: projectcontour.io/v1
kind: TLSCertificateDelegation
metadata:
  name: default-delegation
  namespace: ${SHARINGIO_PAIR_INSTANCE_SETUP_USERLOWERCASE}
spec:
  delegations:
    - secretName: letsencrypt-prod
      targetNamespaces:
      - "*"
#+end_src

