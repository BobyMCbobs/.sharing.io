#+TITLE: .sharing.io
#+EXPORT_SELECT_TAGS: export

#+begin_quote
Configuration for Pair instances
#+end_quote

* What makes up a Pair instance :export:
A Pair instance contains many useful pieces of software for providing a CloudNative and in-cluster environment that suppliments the way that humans can collaborate.

** Software
Here's a list of software installed in the order that it is brought up

- [[https://ubuntu.com/server][Ubuntu host OS]] :: familiar OS that has good support at Equinix Metal
- [[https://www.openssh.com/][OpenSSH server]] :: allows for connection stability and forwarding of SSH keys
- [[https://www.docker.com/][Docker CE]] + [[https://containerd.io/][containerd.io]] :: container runtime allows for image build and deploy when in-cluster
- [[https://kubernetes.io][Kubernetes]] :: the kube
- [[https://github.com/weaveworks/weave][WeaveNet CNI]] :: a CNI to provide networking
- [[https://cert-manager.io][Cert-Manager]] :: manage LetsEncrypt and self-signed certs through Kubernetes
- [[https://github.com/rancher/local-path-provisioner][Local-Path-Provisioner]] :: create PVCs, without external storage
- [[https://github.com/fluxcd/helm-operator][Helm-Operator]] :: declaritively manage Helm charts
- [[https://metallb.universe.tf/][MetalLB]] :: be assigned BGP IPs
- [[https://github.com/kubernetes-sigs/metrics-server][Metrics-Server]] :: allow support for =kubectl top=
- [[https://github.com/kubeops/kubed][Kubed]] :: sync secrets between namespaces
- [[https://github.com/sharingio/environment][Environment]] :: a containerised environment with many tools useful for Pairing, such as tmate, Emacs, Kubernetes tuils, and development utilities
- [[https://github.com/sharingio/environment/tree/master/cmd/environment-exporter][Environment-Exporter]] :: a webserver for serving a JSON list of processes that are listening on ports
- [[https://github.com/kubernetes/ingress-nginx/][nginx-ingress-controller]] :: a Kubernetes ingress controller for bringing traffic into the cluster
- [[https://github.com/kubernetes-sigs/external-dns][External-DNS]] :: a declarative way of managing DNS records
- [[https://www.powerdns.com/][PowerDNS]] :: a DNS server to own the records for {name}.pair.sharing.io
- [[https://github.com/sharingio/environment/tree/master/cmd/environment-exposer][Environment-Exposer]] :: a controller for mananging Kubernetes Service and Ingress resources based on the the results of environment-exporter, in order to expose the ports inside Environment to the public internet
- [[https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack][Kube-Prometheus]] :: a deployment of Prometheus and Grafana. In Pair, it's deployed so that anyone can view it on grafana.{name}.pair.sharing.io
- [[https://gitlab.com/safesurfer/go-http-server][go-http-server]] :: a HTTP server for sharing a folder. Shares =~/public_html= to www.{name}.pair.sharing.io
- [[https://github.com/reveal/multiplex][Reveal-Multiplex]] :: a websocket server for Reveal to enable presentation multiplexing. Available on multiplex.{name}.pair.sharing.io

** Architecture

Diagram of the component architecture to detail the relationships between the components
#+html: <img width=1500 style='margin-left: auto; margin-right: auto;' alt='pair-instance' src='./pair-instance.svg'>

** Configuration
- full controller over DNS records for and under {name}.pair.sharing.io
- TLS on supplied domains with wildcard support

* Structure :export:
- [[./sharingio-pair-preinit-script.sh][sharingio-pair-preinit-script.sh]] :: a script that's runs after all repos are cloned
- [[./init][init]] :: a standard repo init script, this one adds several niceities
- [[./.bashrc++][.bashrc++]] :: extra useful =bash= things
- users/{USERNAME}/init :: user specific init scripts
- [[./public_html][public_html]] :: the default /public_html/ folder, linked to =~/public_html=
- [[./cluster-api/preKubeadmCommands.sh][cluster-api/preKubeadmCommands.sh]] :: commands run before the instance has Kubernetes installed
- [[./cluster-api/postKubeadmCommands.sh][cluster-api/postKubeadmCommands.sh]] :: commands run after the instance has Kubernetes installed, setting it up as an instance
- [[./cluster-api/manifests/][cluster-api/manifests/]] :: the manifests that make up the instance

* Diagram :noexport:
#+begin_src dot :file ./pair-instance.svg
digraph PairInstance {
    label="Pair Instance"
    labelloc="t"
    graph[compound=true]

    subgraph cluster0 {
      label="Legend"
      Pod [shape=rectangle]
      Container [shape=ellipse]
      External [shape=Mcircle]
    }

    subgraph cluster1 {
      label="Environment"
      Environment [label="Environment" shape=ellipse color=cyan3 fontcolor=white style=filled]
      EnvironmentExporter [label="Environment exporter" shape=ellipse]
      Environment -> EnvironmentExporter [dir=back]
    }

    EnvironmentExposer [label="Environment exposer" shape=rectangle]
    PowerDNS [label="PowerDNS" shape=rectangle]
    PowerDNSDB [label="PowerDNS DB" shape=rectangle]
    ExternalDNS [label="ExternalDNS" shape=rectangle]
    CertManager [label="Cert-Manager" shape=rectangle]
    NginxIngressController [label="NGINX Ingress Controller" shape=rectangle]
    GoHttpServer [label="Go-HTTP-Server" shape=rectangle]
    HelmOperator [label="Helm Operator" shape=rectangle]
    LocalPathProvisioner [label="local-path-provisioner" shape=rectangle]
    RevealMultiplex [label="Reveal Multiplex" shape=rectangle]
    KubePrometheus [label="Prometheus + Grafana stack" shape=rectangle]
    MetalLB [label="MetalLB" shape=rectangle]
    Kubed [label="Kubed" shape=rectangle]

    Web [label="Web" shape=Mcircle]

    EnvironmentExposer -> EnvironmentExporter [label="Create Service and Ingress resources from listening processes"]
    GoHttpServer -> Environment [label="Serve the ~/public_html folder"]
    MetalLB -> PowerDNS [label="Provides IP"]
    PowerDNS -> PowerDNSDB
    ExternalDNS -> PowerDNS [label="Configures DNS records"]
    CertManager -> PowerDNS [label="Validates wildcard LetsEncrypt dns01"]
    MetalLB -> NginxIngressController [label="Provides IP"]
    GoHttpServer -> NginxIngressController [label="Serves"]
    RevealMultiplex -> NginxIngressController [label="Serves"]
    CertManager -> NginxIngressController [label="Provides TLS for Ingresses served here"]
    HelmOperator -> NginxIngressController [label="Deploys"]
    HelmOperator -> KubePrometheus [label="Deploys"]
    HelmOperator -> GoHttpServer [label="Deploys"]
    PowerDNSDB -> LocalPathProvisioner [label="Provisions storage"]
    Environment -> RevealMultiplex [label="Drives presentations"]
    Kubed -> CertManager [label="Syncs TLS certs across namespaces"]

    PowerDNS -> Web [label="Serves public DNS records"]
    NginxIngressController -> Web [label="Serves public traffic"]
}
#+end_src

#+RESULTS:
#+begin_src dot
[[file:./pair-instance.svg]]
#+end_src

* Variables :export:
| Name                         | Default                         | Description                                                                                        |
|------------------------------+---------------------------------+----------------------------------------------------------------------------------------------------|
| =TMATE_SOCKET=               | /tmp/ii.default.target.iisocket | The socket where to run tmate out of                                                               |
| =SHARINGIO_PAIR_INIT_EXTRAS= |                                 | The manifests in the extra folder ([[./cluster-api/manifests/extras][cluster-api/manifests/extras]]) to apply when Environment is ready |

* Shortcuts and tips :export:
** .sharing.io config
Any of the config can be overriden by a having a fork of .sharing.io.

IMPORTANT: As Pair moves moderately, this is only a good idea if you can maintain it.

** Refreshing Environment
By executing =nuke-environment=, it will restart Environment back to a clean state.
This is useful if say:
- broken packages were installed
- filesystem is messed up
- overload of programs running

This isn't useful for:
- messy home folder
- broken or misconfigured cluster

** w[0-20] workspaces
When in Environment, using tmate, you can switch windows normally via C-b [0-9].
Sometimes it can be useful to switch using a command.
For example =w1= will switch to SHELL or =w0= to Emacs, or =w3= will switch to the third window.

** sharingio-pair-load-init-env
This alias will load all the env vars prepared for instance launch into the current shell.

** Adding and removing guests after launch
Sometimes you might want to start pairing after creating an instance or you might have forgotten to add a guest.
Guests can be added via
#+begin_src shell
sharingio-pair-add-guest <GUEST NAME>
#+end_src
and removed via
#+begin_src
sharingio-pair-remove-guest <GUEST NAME>
#+end_src

* Notes :export:
- when this repo is forked, the fork is preferred over this one
